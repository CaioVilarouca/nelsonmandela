#Additional HTTP - It'll be redirect in prod environment
server.http.port=8080
# Configuration to secure access using SSL.
server.port=8443
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:cert/smartplace.p12
server.ssl.key-store-password=smartplace
server.ssl.key-alias=smartplace
# Whether a "NoHandlerFoundException" should be thrown if no Handler was found to process a request.
spring.mvc.throw-exception-if-no-handler-found=true
# Whether to enable default resource handling.
spring.web.resources.add-mappings=false
server.servlet.context-path=/smartplace-order
# Whether to enable warn logging of exceptions resolved by a "HandlerExceptionResolver", except for "DefaultHandlerExceptionResolver".
spring.mvc.log-resolved-exception=true
spring.jpa.defer-datasource-initialization=true
spring.datasource.initialization-mode=always
spring.datasource.platform=dev
# DataSource (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.properties.hibernate.default_schema=\"order\"
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# Modo da DDL.
# "hibernate.hbm2ddl.auto".
spring.jpa.hibernate.ddl-auto=create-drop
# Needs to be disable in PROD environment
spring.jpa.show-sql=true
#Fix CLOB creation still not implemented in JPA.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy
# Hibernate additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.properties.hibernate.format_sql=true
#This will start the app even if there's no database connection
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#This will disable OSIV so that we can handle the LazyInitializationException the right way.
spring.jpa.open-in-view=false
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect4

#SMARTPLACE CATALOG INTEGRATION
url.smartplace.catalog=${SMARTPLACE_CATALOG_URL}

#Correios integration
url.zipcode.search=${URL_ZIPCODE_SEARCH}
cors.urls.origins=${CORS_ALLOW_ORIGINS}